@{
    ViewData["Title"] = "Debug History Insertion";
}

<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Debug History Insertion</h1>
    
    <!-- Database Schema Debug -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-database"></i> Database Schema Debug
            </h6>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-info" onclick="debugDatabaseSchema()">
                <i class="fas fa-search"></i> Check Database Schema
            </button>
            <div id="schemaDebugResult" class="mt-3"></div>
        </div>
    </div>

    <!-- History Insertion Debug -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-bug"></i> History Insertion Debug
            </h6>
        </div>
        <div class="card-body">
            <form id="debugForm">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="action">Action:</label>
                            <select class="form-control" id="action" name="action" required>
                                <option value="deposit">Deposit</option>
                                <option value="withdraw">Withdraw</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="amount">Amount:</label>
                            <input type="number" class="form-control" id="amount" name="savingsAmount" step="0.01" min="0.01" value="100.00" required>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-primary" onclick="debugHistoryInsertion()">
                    <i class="fas fa-play"></i> Test History Insertion
                </button>
            </form>
            <div id="insertionDebugResult" class="mt-3"></div>
        </div>
    </div>

    <!-- Current User Info -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-user"></i> Current User Info
            </h6>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-secondary" onclick="getCurrentUserInfo()">
                <i class="fas fa-user-circle"></i> Get Current User Info
            </button>
            <div id="userInfoResult" class="mt-3"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function debugDatabaseSchema() {
            const resultDiv = document.getElementById('schemaDebugResult');
            resultDiv.innerHTML = '<div class="alert alert-info"><i class="fas fa-spinner fa-spin"></i> Checking database schema...</div>';
            
            fetch('/Home/DebugDatabaseSchema', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    let html = '<div class="alert alert-success"><h6>Database Schema Check Results:</h6><pre style="background: #f8f9fa; padding: 10px; border-radius: 5px; max-height: 400px; overflow-y: auto;">';
                    data.debugInfo.forEach(info => {
                        html += info + '\n';
                    });
                    html += '</pre></div>';
                    resultDiv.innerHTML = html;
                } else {
                    let html = '<div class="alert alert-danger"><h6>Database Schema Check Failed:</h6><pre style="background: #f8f9fa; padding: 10px; border-radius: 5px; max-height: 400px; overflow-y: auto;">';
                    data.debugInfo.forEach(info => {
                        html += info + '\n';
                    });
                    html += '</pre></div>';
                    resultDiv.innerHTML = html;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
            });
        }

        function debugHistoryInsertion() {
            const resultDiv = document.getElementById('insertionDebugResult');
            const action = document.getElementById('action').value;
            const amount = parseFloat(document.getElementById('amount').value);
            
            if (!amount || amount <= 0) {
                resultDiv.innerHTML = '<div class="alert alert-warning">Please enter a valid amount greater than 0.</div>';
                return;
            }
            
            resultDiv.innerHTML = '<div class="alert alert-info"><i class="fas fa-spinner fa-spin"></i> Testing history insertion...</div>';
            
            const requestData = {
                action: action,
                savingsAmount: amount
            };
            
            fetch('/Home/DebugHistoryInsertion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    let html = '<div class="alert alert-success"><h6>History Insertion Test Results:</h6><pre style="background: #f8f9fa; padding: 10px; border-radius: 5px; max-height: 400px; overflow-y: auto;">';
                    data.debugInfo.forEach(info => {
                        html += info + '\n';
                    });
                    html += '</pre></div>';
                    resultDiv.innerHTML = html;
                } else {
                    let html = '<div class="alert alert-danger"><h6>History Insertion Test Failed:</h6><pre style="background: #f8f9fa; padding: 10px; border-radius: 5px; max-height: 400px; overflow-y: auto;">';
                    data.debugInfo.forEach(info => {
                        html += info + '\n';
                    });
                    html += '</pre></div>';
                    resultDiv.innerHTML = html;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
            });
        }

        function getCurrentUserInfo() {
            const resultDiv = document.getElementById('userInfoResult');
            resultDiv.innerHTML = '<div class="alert alert-info"><i class="fas fa-spinner fa-spin"></i> Getting user info...</div>';
            
            fetch('/Home/GetCurrentUserInfo', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    let html = '<div class="alert alert-success"><h6>Current User Info:</h6><pre style="background: #f8f9fa; padding: 10px; border-radius: 5px;">';
                    html += `Email: ${data.userInfo.email}\n`;
                    html += `User ID: ${data.userInfo.userId}\n`;
                    html += `Is Authenticated: ${data.userInfo.isAuthenticated}\n`;
                    html += '</pre></div>';
                    resultDiv.innerHTML = html;
                } else {
                    resultDiv.innerHTML = `<div class="alert alert-danger">Failed to get user info: ${data.message}</div>`;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
            });
        }

        // Auto-run database schema check on page load
        window.onload = function() {
            debugDatabaseSchema();
        };
    </script>
}
